---
#### Playbook to perform Kernel Patching for CentOS/RHEL Servers ####
- hosts: #<name of servers in inventory list>
  become: yes
  serial: 2
  tasks:

    - name:  Task 1 - verify web/database processes are running
      shell: if ps -eaf | egrep 'apache|http|nginx|mysql|postgresql|mariadb'|grep -v grep > /dev/null ;then echo 'process_running';else echo 'process_not_running';fi
      ignore_errors: true
      register: process_check
      tags: ['process-stats']

    - name:  Task 2 - decision to start patching
      fail: msg="{{ inventory_hostname }} have application running. Please stop running application(s) first,and then attempt patching."
      when: process_check.stdout == "process_running"

    - name:  Task 3 - upgrade kernel package on RHEL
      ansible.builtin.yum:
        update_cache: yes
        name: kernel
        state: latest
      when: process_check.stdout == "process_not_running" and ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'
      register: yum_update
      tags: ['update']

    - name: Task 4 - Check if a reboot is required after kernel update on RHEL
       register: reboot_check_file
       command: needs-restarting -r
       when: ansible_distribution == 'CentOS' or ansible_distribution == 'RHEL'

    - name: Task 5 - Reboot RHEL if kernel updated
      reboot:
        msg: "Rebooting RHEL After Patching"
        connect_timeout: 15
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
      when: reboot_check.rc == 0
      register: reboot_started
      ignore_errors: true

    - name: Task 6 - pause for 5 mins
      pause:
        minutes: 5

    - name: Task 7 - check if all systems are responding to ssh
       ansible.builtin.wait_for: 
        hosts: '{{ (ansible_ssh_host|default(ansible_host))|default(inventory_hostname) }}'
        port: 22 
        search_regex: OpenSSH 
        delay: 15 
        timeout: 300 
        state: started
